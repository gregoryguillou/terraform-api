swagger: "2.0"
info:
  version: "0.1.9"
  title: Terraform-api
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /channels:
    x-swagger-router-controller: channels
    get:
      tags:
        - main
      description: Return a the list of channels for the current user
      operationId: channels_list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Channels"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /channels/{channel}:
    x-swagger-router-controller: channels
    get:
      tags:
        - main
      description: Returns some details about how a channel is used
      operationId: channel_describe
      parameters:
        - in: path
          name: channel
          type: string
          required: true
          description: Channel to get.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Channel"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - main
      description: Creates a new Channel 
      operationId: channel_create
      parameters:
        - in: path
          name: channel
          type: string
          required: true
          description: Channel to create or update.
        - in: body
          name: content
          description: Channel properties
          required: false
          schema:
            $ref: "#/definitions/Channel"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Channel"
    delete:
      tags:
        - main
      description: Deletes a Channel 
      operationId: channel_delete
      parameters:
        - in: path
          name: channel
          type: string
          required: true
          description: Channel to delete
      responses:
        "204":
          description: Success
  /events/{event}:
    x-swagger-router-controller: events
    get:
      tags:
        - main
      description: Returns the description of a given event
      operationId: event_describe
      parameters:
        - in: path
          name: event
          type: string
          required: true
          description: Event to get.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Event"
        "404":
          description: Event Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /events/{event}/logs:
    x-swagger-router-controller: events
    get:
      tags:
        - main
      description: Returns logs of a given event
      operationId: event_logs
      parameters:
        - in: path
          name: event
          type: string
          required: true
          description: Event to get.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Logs"
        "404":
          description: Event Not Found
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    x-swagger-router-controller: login
    get:
      tags:
        - auth
      description: Returns the JWT token to the caller
      operationId: login_token
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/JwtResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects:
    x-swagger-router-controller: projects
    get:
      tags:
        - main
      description: Return a list of projects managed by the API
      operationId: projects_list
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Projects"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects/{project}:
    x-swagger-router-controller: projects
    get:
      tags:
        - main
      description: Returns the description of a given project
      operationId: project_describe
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ProjectDescription"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - main
      description: Send an action to a given project
      operationId: project_action
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to apply the action too.
        - in: body
          name: action
          description: The action to execute
          required: true
          schema:
            type: object
            required:
              - action
            properties:
              action:
                type: string
                enum: ["reserve", "release", "refresh"]
      responses:
        "201":
          description: Created
  /projects/{project}/branches:
    x-swagger-router-controller: projects
    get:
      tags:
        - main
      description: Returns a list of branches associated with a given project
      operationId: project_branches
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get events from.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Branches"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects/{project}/tags:
    x-swagger-router-controller: projects
    get:
      tags:
        - main
      description: Returns a list of tags associated with a given project
      operationId: project_tags
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get tags from.
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Tags"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects/{project}/workspaces:
    x-swagger-router-controller: projects
    get:
      tags:
        - main
      description: Returns a list of tags associated with a given project
      operationId: project_workspaces
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get workspaces from.
        - in: header
          name: channel
          type: string
          default: default
          required: false
          description: The current channel used by the client
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Workspaces"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects/{project}/workspaces/{workspace}:
    x-swagger-router-controller: workspaces
    get:
      tags:
        - main
      description: Returns the description of a given project/workspace
      operationId: workspace_describe
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get the workspace from.
        - in: path
          name: workspace
          type: string
          required: true
          description: Workspace to get
        - in: header
          name: channel
          type: string
          default: default
          required: false
          description: The current channel used by the client
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Workspace"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags:
        - main
      description: Send an action to a given workspace
      operationId: workspace_action
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get the workspace from.
        - in: path
          name: workspace
          type: string
          required: true
          description: Workspace to get
        - in: header
          name: channel
          type: string
          default: default
          required: false
          description: The current channel used by the client
        - in: body
          name: action
          description: The action to execute
          required: true
          schema:
            type: object
            required:
              - action
            properties:
              action:
                type: string
                enum: ["apply", "check", "clean", "destroy", "update", "promote"]
              ref:
                type: string
              channels:
                type: object
                properties:
                  managementType:
                    type: string
                    enum:
                      - approved
                      - shared
                  duration:
                    type: string
                    enum:
                      - always
                      - lease
                      - request
                  requester:
                    type: object
                    required:
                      - user
                      - channel
                    properties:
                      user:
                        type: string
                      channel:
                        type: string
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/EventDescription"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects/{project}/workspaces/{workspace}/status:
    x-swagger-router-controller: workspaces
    get:
      tags:
        - main
      description: Returns the description of a given project/workspace
      operationId: workspace_status
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get the workspace from.
        - in: path
          name: workspace
          type: string
          required: true
          description: Workspace to get
        - in: header
          name: channel
          type: string
          default: default
          required: false
          description: The current channel used by the client
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StatusResponse"
        "404":
          description: Success
          schema:
            $ref: "#/definitions/StatusResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /projects/{project}/workspaces/{workspace}/version:
    x-swagger-router-controller: workspaces
    get:
      tags:
        - main
      description: Returns the current version of a given project/workspace
      operationId: workspace_version
      parameters:
        - in: path
          name: project
          type: string
          required: true
          description: Project to get the workspace from.
        - in: path
          name: workspace
          type: string
          required: true
          description: Workspace to get
        - in: header
          name: channel
          type: string
          default: default
          required: false
          description: The current channel used by the client
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/VersionResponse"
        "404":
          description: Success
          schema:
            $ref: "#/definitions/VersionResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: login
    get:
      tags:
        - auth
      description: Return the username of the caller based on the JWT token
      operationId: login_user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /version:
    x-swagger-router-controller: version
    get:
      tags:
        - auth
      description: Return the API version
      operationId: version
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Version"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /status:
    x-swagger-router-controller: version
    get:
      tags:
        - auth
      description: Return a 200 to help the loadbalancer check the status
      operationId: status
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  Branches:
    required:
      - branches
    properties:
      branches:
        type: array
        items:
          type: object
          required:
            - name
          properties:
            name:
              type: string
  Channels:
    required:
      - channels
    properties:
      channels:
        type: array
        items:
          type: object
          required:
            - name
          properties:
            name:
              type: string
  Channel:
    properties:
      project:
        type: string
      workspace:
        type: string
      appliedFor:
        type: string
        enum:
          - lease
      until:
        type: dateTime
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Event:
    required:
      - action
      - creation
      - project
    properties:
      action:
        type: string
      creation:
        type: integer
      project:
        type: string
      ref:
        type: string
      status:
        type: string
      workspace:
        type: string
  EventDescription:
    required:
      - event
    properties:
      event:
        type: string
  JwtResponse:
    required:
      - token
    properties:
      message:
        type: string
      token:
        type: string
  Logs:
    required:
      - logs
    properties:
      logs:
        type: array
        items:
          type: object
          required:
            - line
            - text
          properties:
            line:
              type: integer
            text:
              type: string
      type:
        type: string
  Projects:
    required:
      - projects
    properties:
      projects:
        type: array
        items:
          type: object
          required:
            - name
            - type
          properties:
            name:
              type: string
            description:
              type: string
            type:
              type: string
  ProjectDescription:
    required:
      - name
      - type
    properties:
      name:
        type: string
      description:
        type: string
      type:
        type: string
      workspaces:
        type: array
        items:
          type: object
          required:
            - name
          properties:
            name:
              type: string
            status:
              type: string
  StatusResponse:
    required:
      - quickCheck
      - state
    properties:
      quickCheck:
        type: string
      ref:
        type: string
      state:
        type: string
      lastChecked:
        type: object
        properties:
          date:
            type: integer
          state:
            type: string
          ref:
            type: string
  Tags:
    required:
      - tags
    properties:
      tags:
        type: array
        items:
          type: object
          required:
            - name
          properties:
            name:
              type: string
  User:
    required:
      - username
    properties:
      username:
        type: string
  Version:
    required:
      - version
    properties:
      version:
        type: string
  VersionResponse:
    required:
      - appVersion
      - state
    properties:
      appVersion:
        type: string
      ref:
        type: string
      state:
        type: string
      lastChecked:
        type: object
        properties:
          date:
            type: integer
          state:
            type: string
          ref:
            type: string
  Workspace:
    required:
      - project
      - workspace
      - state
    properties:
      channels:
        type: object
        properties:
          managementType:
            type: string
            enum:
              - approved
              - shared
          duration:
            type: string
            enum:
              - always
              - lease
              - request
          leaders:
            description: |
              List the channels that have been accepted as leaders for `always`
              or `lease` duration that require an `approval`.
            type: array
            items:
              type: object
              required:
                - user
                - channel
              properties:
                user:
                  type: string
                channel:
                  type: string
          requesters:
            type: array
            items:
              type: object
              required:
                - user
                - channel
              properties:
                user:
                  type: string
                channel:
                  type: string
      creation:
        type: integer
      lastEvents:
        type: array
        items:
          type: string
      lastChecked:
        type: object
        properties:
          date:
            type: integer
          state:
            type: string
          ref:
            type: string
      project:
        type: string
      ref:
        type: string
      request:
        type: object
        properties:
          date:
            type: integer
          action:
            type: string
          ref:
            type: string
          event:
            type: string
      schedules:
        type: array
        items:
          type: object
          properties:
            frequency:
              type: string
            operation:
              type: string
      state:
        type: string
      type:
        type: string
      until:
        type: dateTime
      workspace:
        type: string
  Workspaces:
    required:
      - workspaces
    properties:
      workspaces:
        type: array
        items:
          type: object
          required:
            - name
          properties:
            name:
              type: string
